#!/usr/bin/env python
#
# A tool to add inbound rules to AWS Security Groups
#
# Author: Peter Pakos <peter.pakos@wandisco.com>

from __future__ import print_function

import boto3
import botocore.exceptions

PROFILE_NAME = 'infra'
CIDR = '192.31.132.22/32'


def main():
    session = boto3.Session(profile_name=PROFILE_NAME)
    ec2c = session.client('ec2')

    regions = []
    for region in ec2c.describe_regions()['Regions']:
        regions.append(region['RegionName'])

    for region in regions:
        ec2 = session.resource('ec2', region_name=region)
        security_groups = ec2.security_groups.all()
        num = 0
        for sg in security_groups:
            num += 1
        i = 0
        for sg in security_groups:
            i += 1
            print('\nSECURITY GROUP: %s (Region %s: %s/%s)' % (sg.id, region, i, num))
            try:
                print('ALL TRAFFIC: ', end='')
                sg.authorize_ingress(
                    IpProtocol='-1',
                    CidrIp=CIDR
                )
            except botocore.exceptions.ClientError as err:
                print(err)
                try:
                    print('TCP: ', end='')
                    sg.authorize_ingress(
                        IpProtocol='tcp',
                        FromPort=0,
                        ToPort=65535,
                        CidrIp=CIDR
                    )
                except botocore.exceptions.ClientError as err:
                    print(err)
                else:
                    print('OK')
                try:
                    print('UDP: ', end='')
                    sg.authorize_ingress(
                        IpProtocol='udp',
                        FromPort=0,
                        ToPort=65535,
                        CidrIp=CIDR
                    )
                except botocore.exceptions.ClientError as err:
                    print(err)
                else:
                    print('OK')
                try:
                    print('ICMP: ', end='')
                    sg.authorize_ingress(
                        IpProtocol='icmp',
                        FromPort=-1,
                        ToPort=-1,
                        CidrIp=CIDR
                    )
                except botocore.exceptions.ClientError as err:
                    print(err)
                else:
                    print('OK')
            else:
                print('OK')


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print('\nCancelling...')
